
--- /usr/lib/python2.7/genericpath.py   2014-02-19 05:48:01.000000000 -0800
+++ genericpath.py      2015-06-11 08:02:28.273738989 -0700
@@ -9,14 +9,65 @@
 __all__ = ['commonprefix', 'exists', 'getatime', 'getctime', 'getmtime',
            'getsize', 'isdir', 'isfile']
 
+myshow = True
+mycache_ison = True
+mycache = '/tmp/myexistscache'
+myfiles = {}
+def mycacheload(mydict):
+    if not mycache_ison:
+        return
+    if not 'lastwrite' in mydict.keys():
+        def myexists(path):
+            try:
+                os.stat(path)
+            except os.error:
+                return False
+            return True
+        if myexists(mycache):
+            ff = open(mycache, 'r')
+            import json as mypickle
+            mydict = mypickle.load(ff)
+            ff.close()
+            global myfiles
+            myfiles = mydict
+def myaddcache(path, value):
+    if not mycache_ison:
+        return
+    if not 'files' in myfiles.keys():
+        myfiles['files'] = {}
+    if not path in myfiles['files'].keys():
+        myfiles['files'][path] = value
+        import time as mytime
+        myfiles['lastwrite'] = mytime.time()
+        ff = open(mycache, 'w')
+        import json as mypickle
+        mypickle.dump(myfiles, ff, indent=1)
+        ff.close()
+def mycachehas(path):
+    if not mycache_ison:
+        return False, False
+    if not 'files' in myfiles.keys():
+        return False, False
+    if not path in myfiles['files'].keys():
+        return False, False
+    return True, myfiles['files'][path]
+mycacheload(myfiles)
 
 # Does a path exist?
 # This is false for dangling symbolic links on systems that support them.
 def exists(path):
     """Test whether a path exists.  Returns False for broken symbolic links"""
+    rtne, rtnv = mycachehas(path)
+    if rtne:
+        if myshow: print "\n  genericpath exists cache   ", rtnv, "  ", path, "\n"
+        return rtnv
     try:
         os.stat(path)
+        if myshow: print "\n  genericpath exists os.stat  True  ", path, "\n"
+        myaddcache(path, True)
     except os.error:
+        if myshow: print "\n  genericpath exists os.stat  False ", path, "\n"
+        myaddcache(path, False)
         return False
     return True
 
@@ -26,6 +77,7 @@
 def isfile(path):
     """Test whether a path is a regular file"""
     try:
+        if myshow: print "\n  genericpath isfile ", path, "\n"
         st = os.stat(path)
     except os.error:
         return False

