

developer2@ip-172-31-27-47:~/frigate-src$ sh bb-cmd
[9 ms] @devcontainers/cli 0.75.0. Node.js v20.19.0. linux 6.8.0-1024-aws x64.
Running the initializeCommand from devcontainer.json...

[1131 ms] Start: Run: /bin/sh -c .devcontainer/initialize.sh
config/config.yml already exists, skipping initialization

[2334 ms] Start: Run: docker-compose -f /home/developer2/frigate-src/frigate-src/docker-compose.yml config
[3230 ms] Start: Run: docker-compose -f /home/developer2/frigate-src/frigate-src/docker-compose.yml config
[3927 ms] services:
  devcontainer:
    build:
      context: /home/developer2/frigate-src/frigate-src
      dockerfile: docker/main/Dockerfile
      target: devcontainer
    container_name: frigate-devcontainer
    devices:
    - /dev/bus/usb:/dev/bus/usb
    environment:
      YOLO_MODELS: ''
    group_add:
    - '109'
    - '110'
    - '44'
    - '46'
    shm_size: 256mb
    volumes:
    - /home/developer2/frigate-src/frigate-src:/workspace/frigate:cached
    - /home/developer2/frigate-src/frigate-src/web/dist:/opt/frigate/web:cached
    - /etc/localtime:/etc/localtime:ro
    - /home/developer2/frigate-src/frigate-src/config:/config:rw
    - /home/developer2/frigate-src/frigate-src/debug:/media/frigate:rw
    - /dev/bus/usb:/dev/bus/usb:rw
  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:1.6
    ports:
    - published: 1883
      target: 1883
version: '3'

[3937 ms] Start: Run: docker inspect --type image debian:12-slim
[4054 ms] Start: Run: docker-credential-secret get
[4521 ms] Resolving Feature dependencies for 'ghcr.io/devcontainers/features/common-utils:2'...
[4521 ms] * Processing feature: ghcr.io/devcontainers/features/common-utils:2
[4581 ms] Start: Run: docker-credential-secret get
[4797 ms] * Fetching feature: common-utils_0_oci
[4953 ms] Files to omit: ''
[5136 ms] * Fetched feature: common-utils_0_oci version 2.5.2
[5178 ms] Start: Run: docker build -t dev_container_feature_content_temp -f /tmp/devcontainercli-developer2/container-features/0.75.0-1741969260189/Dockerfile.buildContent /tmp/devcontainercli-developer2/container-features/0.75.0-1741969260189
[+] Building 0.2s (5/5) FINISHED                                                                                                   docker:default
 => [internal] load build definition from Dockerfile.buildContent                                                                            0.0s
 => => transferring dockerfile: 95B                                                                                                          0.0s
 => [internal] load .dockerignore                                                                                                            0.0s
 => => transferring context: 2B                                                                                                              0.0s
 => [internal] load build context                                                                                                            0.1s
 => => transferring context: 91.18kB                                                                                                         0.1s
 => CACHED [1/1] COPY . /tmp/build-features/                                                                                                 0.0s
 => exporting to image                                                                                                                       0.0s
 => => exporting layers                                                                                                                      0.0s
 => => writing image sha256:c4e9328a00917758f9afe5d902c52c31f1a0a19ce2a0e7dbf1df64d5f6ee5ebf                                                 0.0s
 => => naming to docker.io/library/dev_container_feature_content_temp                                                                        0.0s
[5843 ms] Docker Compose override file for building image:
version: "3"

services:
  devcontainer:
    build:
      dockerfile: /tmp/devcontainercli-developer2/container-features/0.75.0-1741969260189/Dockerfile-with-features
      target: dev_containers_target_stage
      args:
        - BUILDKIT_INLINE_CACHE=1
        - _DEV_CONTAINERS_BASE_IMAGE=devcontainer
        - _DEV_CONTAINERS_IMAGE_USER=root
        - _DEV_CONTAINERS_FEATURE_CONTENT_SOURCE=dev_container_feature_content_temp

[5845 ms] Start: Run: docker-compose --project-name frigate-src -f /home/developer2/frigate-src/frigate-src/docker-compose.yml -f /tmp/devcontainercli-developer2/docker-compose/docker-compose.devcontainer.build-1741969261517.yml build
mqtt uses an image, skipping
Building devcontainer
[+] Building 635.9s (78/78) FINISHED                                                                                               docker:default
 => [internal] load build definition from Dockerfile-with-features                                                                           0.0s
 => => transferring dockerfile: 14.36kB                                                                                                      0.0s
 => resolve image config for docker-image://docker.io/docker/dockerfile:1.6                                                                  0.3s
 => CACHED docker-image://docker.io/docker/dockerfile:1.6@sha256:ac85f380a63b13dfcefa89046420e1781752bab202122f8f50032edf31be0021            0.0s
 => [internal] load metadata for docker.io/library/debian:12                                                                                 0.2s
 => [internal] load metadata for docker.io/library/debian:12-slim                                                                            0.2s
 => [internal] load metadata for docker.io/library/dev_container_feature_content_temp:latest                                                 0.0s
 => [internal] load .dockerignore                                                                                                            0.0s
 => => transferring context: 157B                                                                                                            0.0s
 => [internal] load build context                                                                                                            0.6s
 => => transferring context: 9.39MB                                                                                                          0.6s
 => CACHED [dev_containers_feature_content_source 1/1] FROM docker.io/library/dev_container_feature_content_temp:latest                      0.0s
 => [go2rtc 1/2] WORKDIR /rootfs/usr/local/go2rtc/bin                                                                                        0.0s
 => [slim-base 1/2] FROM docker.io/library/debian:12-slim@sha256:12c396bd585df7ec21d5679bb6a83d4878bc4415ce926c9e5ea6426d23c60bdc            0.0s
 => https://github.com/AlexxIT/go2rtc/releases/download/v1.9.9/go2rtc_linux_amd64                                                            0.3s
 => CACHED [slim-base 2/2] RUN sh -c ""                                                                                                      0.0s
 => [base_host 1/1] FROM docker.io/library/debian:12@sha256:35286826a88dc879b4f438b645ba574a55a14187b483d09213a024dc0c0a64ed                 0.0s
 => CACHED [wget 1/2] RUN apt-get update     && apt-get install -y wget xz-utils     && rm -rf /var/lib/apt/lists/*                          0.0s
 => CACHED [wget 2/2] WORKDIR /rootfs                                                                                                        0.0s
 => CACHED [libusb-build 1/6] WORKDIR /opt                                                                                                   0.0s
 => CACHED [base 2/2] RUN sh -c ""                                                                                                           0.0s
 => [libusb-build 2/6] RUN apt-get update && apt-get install -y unzip build-essential automake libtool ccache pkg-config                    69.3s
 => [wheels  1/10] RUN apt-get -qq update     && apt-get -qq install -y     apt-transport-https wget     && apt-get -qq update     && apt  244.4s
 => CACHED [go2rtc 2/2] ADD --link --chmod=755 https://github.com/AlexxIT/go2rtc/releases/download/v1.9.9/go2rtc_linux_amd64 go2rtc          0.0s
 => CACHED [s6-overlay 1/1] RUN --mount=type=bind,source=docker/main/install_s6_overlay.sh,target=/deps/install_s6_overlay.sh     /deps/ins  0.0s
 => CACHED [models 1/8] RUN wget -qO edgetpu_model.tflite https://github.com/google-coral/test_data/raw/release-frogfish/ssdlite_mobiledet_  0.0s
 => CACHED [models 2/8] RUN wget -qO cpu_model.tflite https://github.com/google-coral/test_data/raw/release-frogfish/ssdlite_mobiledet_coco  0.0s
 => CACHED [models 3/8] COPY labelmap.txt .                                                                                                  0.0s
 => [deps 1/5] RUN --mount=type=bind,source=docker/main/install_deps.sh,target=/deps/install_deps.sh     /deps/install_deps.sh             167.8s
 => [nginx 1/1] RUN --mount=type=bind,source=docker/main/build_nginx.sh,target=/deps/build_nginx.sh     /deps/build_nginx.sh               263.9s
 => CACHED [tempio 1/1] RUN --mount=type=bind,source=docker/main/install_tempio.sh,target=/deps/install_tempio.sh     /deps/install_tempio.  0.0s
 => CACHED [sqlite-vec 1/2] COPY docker/main/build_sqlite_vec.sh /deps/build_sqlite_vec.sh                                                   0.0s
 => CACHED [ov-converter 1/3] COPY docker/main/requirements-ov.txt /requirements-ov.txt                                                      0.0s
 => [sqlite-vec 2/2] RUN --mount=type=tmpfs,target=/tmp --mount=type=tmpfs,target=/var/cache/apt     --mount=type=bind,source=docker/main  197.4s
 => [ov-converter 2/3] RUN apt-get -qq update     && apt-get -qq install -y wget python3 python3-dev python3-distutils gcc pkg-config lib  197.4s
 => [libusb-build 3/6] RUN --mount=type=cache,target=/root/.ccache wget -q https://github.com/libusb/libusb/archive/v1.0.26.zip -O v1.0.26  49.5s
 => [libusb-build 4/6] RUN apt-get update &&     apt-get install -y --no-install-recommends libusb-1.0-0-dev &&     rm -rf /var/lib/apt/lis  7.5s
 => [libusb-build 5/6] WORKDIR /opt/libusb-1.0.26/libusb                                                                                     0.1s
 => [libusb-build 6/6] RUN /bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool  --mode=install /usr/bin/install -c libusb-1.0.la '/u  1.3s
 => [deps 2/5] RUN wget -q https://bootstrap.pypa.io/get-pip.py -O get-pip.py     && python3 get-pip.py "pip"                               17.2s
 => [ov-converter 3/3] RUN --mount=type=bind,source=docker/main/build_ov_model.py,target=/build_ov_model.py     mkdir /models && cd /model  90.4s
 => [wheels  2/10] RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1                                          0.5s
 => [wheels  3/10] RUN wget -q https://bootstrap.pypa.io/get-pip.py -O get-pip.py     && python3 get-pip.py "pip"                           10.3s
 => [wheels  4/10] COPY docker/main/requirements.txt /requirements.txt                                                                       0.1s
 => [wheels  5/10] RUN pip3 install -r /requirements.txt                                                                                    10.0s
 => [deps-rootfs 1/9] COPY --from=nginx /usr/local/nginx/ /usr/local/nginx/                                                                  0.1s
 => [deps-rootfs 2/9] COPY --from=sqlite-vec /usr/local/lib/ /usr/local/lib/                                                                 0.1s
 => [deps-rootfs 3/9] COPY --from=go2rtc /rootfs/ /                                                                                          0.1s
 => [deps-rootfs 4/9] COPY --from=libusb-build /usr/local/lib /usr/local/lib                                                                 0.1s
 => [deps-rootfs 5/9] COPY --from=tempio /rootfs/ /                                                                                          0.1s
 => [deps-rootfs 6/9] COPY --from=s6-overlay /rootfs/ /                                                                                      0.6s
 => [wheels  6/10] COPY docker/main/build_pysqlite3.sh /build_pysqlite3.sh                                                                   0.1s
 => [wheels  7/10] RUN /build_pysqlite3.sh                                                                                                 123.2s
 => [models 4/8] COPY --from=ov-converter /models/ssdlite_mobilenet_v2.xml openvino-model/                                                   0.1s
 => [models 5/8] COPY --from=ov-converter /models/ssdlite_mobilenet_v2.bin openvino-model/                                                   0.1s
 => [models 6/8] RUN wget -q https://github.com/openvinotoolkit/open_model_zoo/raw/master/data/dataset_classes/coco_91cl_bkgr.txt -O openvi  0.8s
 => [models 7/8] RUN wget -qO - https://www.kaggle.com/api/v1/models/google/yamnet/tfLite/classification-tflite/1/download | tar xvz && mv   1.3s
 => [models 8/8] COPY audio-labelmap.txt .                                                                                                   0.1s
 => [deps-rootfs 7/9] COPY --from=models /rootfs/ /                                                                                          0.1s
 => [wheels  8/10] COPY docker/main/requirements-wheels.txt /requirements-wheels.txt                                                         0.0s
 => [wheels  9/10] RUN pip3 wheel --wheel-dir=/wheels -r /requirements-wheels.txt                                                           92.7s
 => [wheels 10/10] RUN --mount=type=bind,source=docker/main/install_hailort.sh,target=/deps/install_hailort.sh     /deps/install_hailort.sh  1.9s
 => [deps-rootfs 8/9] COPY --from=wheels /rootfs/ /                                                                                          0.2s
 => [deps-rootfs 9/9] COPY docker/main/rootfs/ /                                                                                             0.1s
 => [deps 3/5] RUN --mount=type=bind,from=wheels,source=/wheels,target=/deps/wheels     pip3 install -U /deps/wheels/*.whl                  67.0s
 => [deps 4/5] COPY --from=deps-rootfs / /                                                                                                   0.4s
 => [deps 5/5] RUN ldconfig                                                                                                                  0.3s
 => [devcontainer 1/6] COPY docker/main/fake_frigate_run /etc/s6-overlay/s6-rc.d/frigate/run                                                 0.1s
 => [devcontainer 2/6] RUN mkdir -p /opt/frigate     && ln -svf /workspace/frigate/frigate /opt/frigate/frigate                              0.6s
 => [devcontainer 3/6] RUN curl -SLO https://deb.nodesource.com/nsolid_setup_deb.sh &&     chmod 500 nsolid_setup_deb.sh &&     ./nsolid_s  21.2s
 => [devcontainer 4/6] WORKDIR /workspace/frigate                                                                                            0.1s
 => [devcontainer 5/6] RUN apt-get update     && apt-get install make -y     && rm -rf /var/lib/apt/lists/*                                  5.9s
 => [devcontainer 6/6] RUN --mount=type=bind,source=./docker/main/requirements-dev.txt,target=/workspace/frigate/requirements-dev.txt     p  3.0s
 => [dev_containers_target_stage 1/5] RUN mkdir -p /tmp/dev-container-features                                                               0.6s
 => [dev_containers_feature_content_normalize 1/2] COPY --from=dev_containers_feature_content_source /tmp/build-features/devcontainer-featu  0.2s
 => [dev_containers_feature_content_normalize 2/2] RUN chmod -R 0755 /tmp/build-features/                                                    0.6s
 => [dev_containers_target_stage 2/5] COPY --from=dev_containers_feature_content_normalize /tmp/build-features/ /tmp/dev-container-features  0.2s
 => [dev_containers_target_stage 3/5] RUN echo "_CONTAINER_USER_HOME=$( (command -v getent >/dev/null 2>&1 && getent passwd 'root' || grep   0.4s
 => [dev_containers_target_stage 4/5] COPY --chown=root:root --from=dev_containers_feature_content_source /tmp/build-features/common-utils_  0.2s
 => [dev_containers_target_stage 5/5] RUN chmod -R 0755 /tmp/dev-container-features/common-utils_0 && cd /tmp/dev-container-features/commo  30.2s
 => exporting to image                                                                                                                      17.6s
 => => exporting layers                                                                                                                     17.6s
 => => preparing layers for inline cache                                                                                                     0.0s
 => => writing image sha256:009ccd2c21b76458d2b4891aff2ad5a3f79b1bbd683719d6cae095a603090c8e                                                 0.0s
 => => naming to docker.io/library/frigate-src_devcontainer                                                                                  0.0s
[+] Building 7.1s (6/6) FINISHED                                                                                                   docker:default
 => [internal] load build definition from updateUID.Dockerfile-0.75.0                                                                        0.0s
 => => transferring dockerfile: 1.52kB                                                                                                       0.0s
 => [internal] load metadata for docker.io/library/frigate-src_devcontainer:latest                                                           0.0s
 => [internal] load .dockerignore                                                                                                            0.0s
 => => transferring context: 2B                                                                                                              0.0s
 => [1/2] FROM docker.io/library/frigate-src_devcontainer:latest                                                                             0.2s
 => [2/2] RUN eval $(sed -n "s/vscode:[^:]*:\([^:]*\):\([^:]*\):[^:]*:\([^:]*\).*/OLD_UID=\1;OLD_GID=\2;HOME_FOLDER=\3/p" /etc/passwd);  ev  6.2s
 => exporting to image                                                                                                                       0.5s
 => => exporting layers                                                                                                                      0.4s
 => => writing image sha256:102e2f2e9bb573204e85bdb16351eaf5629b2d09ffb7670e417c77b0fa2873f6                                                 0.0s
 => => naming to docker.io/library/vsc-frigate-src-cbf1e5d15ba4dc4f722d594f253704b760f7dc2fc2b566f89d25ad0bd54e2b4c-uid                      0.0s
[650486 ms] Start: Run: docker-compose --project-name frigate-src -f /home/developer2/frigate-src/frigate-src/docker-compose.yml -f /tmp/devcontainercli-developer2/docker-compose/docker-compose.devcontainer.build-1741969261517.yml -f /tmp/devcontainercli-developer2/docker-compose/docker-compose.devcontainer.containerFeatures-1741969906158-a6054858-1cfb-425f-855b-d72ec920027a.yml up -d
Creating network "frigate-src_default" with the default driver
Pulling mqtt (eclipse-mosquitto:1.6)...
1.6: Pulling from library/eclipse-mosquitto
f7dab3ab2d6e: Pull complete
fded66e82efd: Pull complete
0ab4c5a382ed: Pull complete
Digest: sha256:c9007ecf0e35a14035ef2ad8209aa589bfbd2c67d77b94daf97e98fd2e5ec571
Status: Downloaded newer image for eclipse-mosquitto:1.6
Creating frigate-devcontainer ... error
Creating mqtt                 ...

ERROR: for frigate-devcontainer  Cannot start service devcontainer: error gathering device information while adding custom device "/dev/bus/usb": Creating mqtt                 ... done

ERROR: for devcontainer  Cannot start service devcontainer: error gathering device information while adding custom device "/dev/bus/usb": not a device node
ERROR: Encountered errors while bringing up the project.
Error: Command failed: docker-compose --project-name frigate-src -f /home/developer2/frigate-src/frigate-src/docker-compose.yml -f /tmp/devcontainercli-developer2/docker-compose/docker-compose.devcontainer.build-1741969261517.yml -f /tmp/devcontainercli-developer2/docker-compose/docker-compose.devcontainer.containerFeatures-1741969906158-a6054858-1cfb-425f-855b-d72ec920027a.yml up -d
    at c6 (/home/developer2/.nvm/versions/node/v20.19.0/lib/node_modules/@devcontainers/cli/dist/spec-node/devContainersSpecCLI.js:432:3348)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async u6 (/home/developer2/.nvm/versions/node/v20.19.0/lib/node_modules/@devcontainers/cli/dist/spec-node/devContainersSpecCLI.js:412:3489)
    at async H6 (/home/developer2/.nvm/versions/node/v20.19.0/lib/node_modules/@devcontainers/cli/dist/spec-node/devContainersSpecCLI.js:484:4015)
    at async BC (/home/developer2/.nvm/versions/node/v20.19.0/lib/node_modules/@devcontainers/cli/dist/spec-node/devContainersSpecCLI.js:484:4957)
    at async d7 (/home/developer2/.nvm/versions/node/v20.19.0/lib/node_modules/@devcontainers/cli/dist/spec-node/devContainersSpecCLI.js:665:202)
    at async f7 (/home/developer2/.nvm/versions/node/v20.19.0/lib/node_modules/@devcontainers/cli/dist/spec-node/devContainersSpecCLI.js:664:14804)
    at async /home/developer2/.nvm/versions/node/v20.19.0/lib/node_modules/@devcontainers/cli/dist/spec-node/devContainersSpecCLI.js:484:1188
{"outcome":"error","message":"Command failed: docker-compose --project-name frigate-src -f /home/developer2/frigate-src/frigate-src/docker-compose.yml -f /tmp/devcontainercli-developer2/docker-compose/docker-compose.devcontainer.build-1741969261517.yml -f /tmp/devcontainercli-developer2/docker-compose/docker-compose.devcontainer.containerFeatures-1741969906158-a6054858-1cfb-425f-855b-d72ec920027a.yml up -d","description":"An error occurred starting Docker Compose up."}




