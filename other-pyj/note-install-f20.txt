

chroot fedora 20 system
=========================

rpm --root /home/pyjs/chroot-f20 --initdb
rpm --root /home/pyjs/chroot-f20 -i /tmp/fedora-release-20-3.noarch.rpm
rpm --root /home/pyjs/chroot-f20 --import https://fedoraproject.org/static/246110C1.txt

yum installroot=/home/pyjs/chroot-f20 install bash yum net-tools iputils passwd tar

schroot -c pyjs ... now inside the chroot fedora 20 ...

yum install xterm
yum install webkitgtk3
yum install pygobject3

other packages installed later

   13  yum install which vi strace gdb
   23  yum install yum-utils
   29  yum install kde-workspace
   36  yum install xorg-x11-fonts-ISO8859-1-100dpi.noarch
   42  yum install findutils
   43  cat /tmp/fonts | xargs yum install
   53  yum install python-pudb


pyjs.org install
===================

$ pwd
/home/pyjs/pyjstest/virtualenv-1.11.4
$ python virtualenv.py /home/pyjs/pyjstest/pyjsroot/mypy
New python executable in /home/pyjs/pyjstest/pyjsroot/mypy/bin/python
Installing setuptools, pip...done.

$ pwd
/home/pyjs/pyjstest/pyjsroot
$ mypy/bin/pip install /home/pyjs/pyjstest/pyjsroot 


test run one -- crash
-----------------------

$ PYTHONPATH=.:/lib/python2.7/site-packages mypy/bin/python examples/helloworld/Hello.py 
INFO:pyjs.runners:conf:
[('runner', 'giwebkit'),
 ('home', '/home/pyjs/.pyjd'),
 ('is_desktop', True),
 ('native_dnd', True),
 ('engine', 'giwebkit')]
GLib-GIO-Message: Using the 'memory' GSettings backend.  Your settings will not be saved or shared with other applications.
INFO:pyjs.runners.giwebkit:uri:
[('scheme', 'file'),
 ('user', None),
 ('password', None),
 ('host', ''),
 ('port', 0L),
 ('path', '/home/pyjs/pyjstest/pyjsroot/public/Hello.html'),
 ('query', 'fred=foo'),
 ('fragment', 'me')]
Traceback (most recent call last):
  File "/home/pyjs/pyjstest/pyjsroot/pyjs/runners/giwebkit.py", line 609, in _frame_loaded_cb
    __pyjamas__.set_main_frame(self)
  File "/home/pyjs/pyjstest/pyjsroot/pyjswidgets/__pyjamas__.py", line 38, in set_main_frame
    DOM.init()
  File "/home/pyjs/pyjstest/pyjsroot/pyjswidgets/pyjamas/DOM.py", line 83, in init
    mf._addWindowEventListener("click", browser_event_cb)
  File "/home/pyjs/pyjstest/pyjsroot/pyjs/runners/giwebkit.py", line 693, in addWindowEventListener
    self._wnd.add_event_listener(event_name, listener, False)
TypeError: add_event_listener() takes exactly 5 arguments (4 given)
Segmentation fault


edit to disable add_event_listener() temporary


test run two with strace -- crash
-----------------------------------

PYTHONPATH=.:/lib/python2.7/site-packages strace mypy/bin/python examples/helloworld/Hello.py 
-bas

mmap2(NULL, 126976, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x6dda2000
madvise(0x6dda2000, 126976, MADV_DONTNEED) = 0
mprotect(0x6ddb0000, 65536, PROT_READ|PROT_WRITE) = 0
madvise(0x6ddb0000, 65536, MADV_WILLNEED) = -1 EBADF (Bad file descriptor)
stat64("/home/pyjs/pyjstest/pyjsroot/pyjs/runners/__pyjamas__", 0x7f859a0c) = -1 ENOENT (No such file or directory)
open("/home/pyjs/pyjstest/pyjsroot/pyjs/runners/__pyjamas__.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
open("/home/pyjs/pyjstest/pyjsroot/pyjs/runners/__pyjamas__module.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
open("/home/pyjs/pyjstest/pyjsroot/pyjs/runners/__pyjamas__.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
open("/home/pyjs/pyjstest/pyjsroot/pyjs/runners/__pyjamas__.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
write(7, "\1\0\0\0\0\0\0\0", 8)         = 8
readlink("/proc/self/exe", "/home/pyjs/pyjstest/pyjsroot/mypy/b"..., 4096) = 41
--- SIGSEGV {si_signo=SIGSEGV, si_code=SEGV_MAPERR, si_addr=0} ---
+++ killed by SIGSEGV +++
Segmentation fault


test run three with gdb -- crash
-----------------------------------

$ gdb --args  mypy/bin/python examples/helloworld/Hello.py 

('path', '/home/pyjs/pyjstest/pyjsroot/public/Hello.html'),
 
[New Thread 0x70618b40 (LWP 15070)]
[New Thread 0x6fe17b40 (LWP 15071)]
[New Thread 0x6eeffb40 (LWP 15072)]

Program received signal SIGSEGV, Segmentation fault.
0x74a1bc87 in WebCore::RenderStyle::fontMetrics() const () from /lib/libwebkitgtk-3.0.so.0

Segmentation fault in WebCore::RenderStyle::fontMetrics() const () from /lib/libwebkitgtk-3.0.so.0

Program received signal SIGSEGV, Segmentation fault.
0x74a1bc87 in WebCore::RenderStyle::fontMetrics() const () from /lib/libwebkitgtk-3.0.so.0
Missing separate debuginfos, use: 
debuginfo-install
  at-spi2-atk-2.10.2-1.fc20.i686 at-spi2-core-2.10.2-1.fc20.i686
  atk-2.10.0-1.fc20.i686 cairo-1.13.1-0.1.git337ab1f.fc20.i686
  cairo-gobject-1.13.1-0.1.git337ab1f.fc20.i686
  dbus-glib-0.100.2-2.fc20.i686 dbus-libs-1.6.12-8.fc20.i686
  enchant-1.6.0-7.fc20.i686 expat-2.1.0-7.fc20.i686
  fontconfig-2.11.0-1.fc20.i686 freetype-2.5.0-5.fc20.i686
  gdk-pixbuf2-2.30.3-1.fc20.i686 geoclue-0.12.99-5.fc20.i686
  glib-networking-2.38.2-1.fc20.i686 glib2-2.38.2-2.fc20.i686
  glibc-2.18-12.fc20.i686 gobject-introspection-1.38.0-1.fc20.i686
  gstreamer1-1.2.3-1.fc20.i686 gstreamer1-plugins-base-1.2.3-1.fc20.i686
  gtk3-3.10.8-1.fc20.i686 harfbuzz-0.9.27-1.fc20.i686
  harfbuzz-icu-0.9.27-1.fc20.i686 hunspell-1.3.2-14.fc20.i686
  keyutils-libs-1.5.9-1.fc20.i686 krb5-libs-1.11.5-5.fc20.i686
  libICE-1.0.8-6.fc20.i686 libSM-1.2.1-6.fc20.i686
  libX11-1.6.1-1.fc20.i686 libXau-1.0.8-2.fc20.i686
  libXcomposite-0.4.4-4.fc20.i686 libXcursor-1.1.14-2.fc20.i686
  libXdamage-1.1.4-4.fc20.i686 libXext-1.3.2-2.fc20.i686
  libXfixes-5.0.1-2.fc20.i686 libXi-1.7.2-2.fc20.i686
  libXinerama-1.1.3-2.fc20.i686 libXrandr-1.4.1-2.fc20.i686
  libXrender-0.9.8-2.fc20.i686 libXt-1.1.4-7.fc20.i686
  libXxf86vm-1.1.3-2.fc20.i686 libcom_err-1.42.8-3.fc20.i686
  libdrm-2.4.53-1.fc20.i686 libffi-3.0.13-5.fc20.i686
  libgcc-4.8.2-7.fc20.i686 libgcrypt-1.5.3-2.fc20.i686
  libgpg-error-1.12-1.fc20.i686 libicu-50.1.2-10.fc20.i686
  libjpeg-turbo-1.3.1-2.fc20.i686 libmodman-2.0.1-7.fc20.i686
  libpng-1.6.3-3.fc20.i686 libproxy-0.4.11-8.fc20.i686
  libsecret-0.16-1.fc20.i686 libselinux-2.2.1-6.fc20.i686
  libsoup-2.44.2-1.fc20.i686 libstdc++-4.8.2-7.fc20.i686
  libuuid-2.24.2-1.fc20.i686 libwayland-client-1.2.0-3.fc20.i686
  libwayland-cursor-1.2.0-3.fc20.i686 libwayland-server-1.2.0-3.fc20.i686
  libwebp-0.3.1-3.fc20.i686 libxcb-1.9.1-3.fc20.i686
  libxkbcommon-0.3.1-1.fc20.i686 libxml2-2.9.1-2.fc20.i686
  libxslt-1.1.28-5.fc20.i686 mesa-libEGL-10.1.3-1.20140509.fc20.i686
  mesa-libGL-10.1.3-1.20140509.fc20.i686 mesa-libgbm-10.1.3-1.20140509.fc20.i686
  mesa-libglapi-10.1.3-1.20140509.fc20.i686 openssl-libs-1.0.1e-37.fc20.1.i686
  orc-0.4.18-1.fc20.i686 pango-1.36.1-3.fc20.i686
  pcre-8.33-4.fc20.i686 pixman-0.30.0-3.fc20.i686
  pygobject3-base-3.10.2-1.fc20.i686 python-libs-2.7.5-11.fc20.i686
  sqlite-3.8.4.3-1.fc20.i686 systemd-libs-208-16.fc20.i686
  webkitgtk3-2.2.7-1.fc20.i686 xz-libs-5.1.2-8alpha.fc20.i686
  zlib-1.2.8-3.fc20.i686


test run four with gdb symbols -- back-trace
--------------------------------------------------

Program received signal SIGSEGV, Segmentation fault.
primarySimpleFontData (description=..., this=0x71101b60) at Source/WebCore/platform/graphics/FontGlyphs.h:123
123             m_cachedPrimarySimpleFontData = primaryFontData(description)->fontDataForCharacter(' ');

(gdb) list
118
119     inline const SimpleFontData* FontGlyphs::primarySimpleFontData(const FontDescription& description) const
120     {
121         ASSERT(isMainThread());
122         if (!m_cachedPrimarySimpleFontData)
123             m_cachedPrimarySimpleFontData = primaryFontData(description)->fontDataForCharacter(' ');
124         return m_cachedPrimarySimpleFontData;
125     }

(gdb) bt
#0  primarySimpleFontData (description=..., this=0x71101b60) at Source/WebCore/platform/graphics/FontGlyphs.h:123
#1  primaryFont (this=<optimized out>) at Source/WebCore/platform/graphics/Font.h:326
#2  fontMetrics (this=<optimized out>) at Source/WebCore/platform/graphics/Font.h:143
#3  WebCore::RenderStyle::fontMetrics (this=this@entry=0x71153c40) at Source/WebCore/rendering/style/RenderStyle.cpp:1335
#4  0x74a1bea3 in WebCore::RenderStyle::computedLineHeight (this=0x71153c40, renderView=0x7110c010)
    at Source/WebCore/rendering/style/RenderStyle.cpp:1376
#5  0x7488ef06 in WebCore::RenderBlock::lineHeight (this=0x7110c300, firstLine=true, direction=WebCore::HorizontalLine, 
    linePositionMode=linePositionMode@entry=WebCore::PositionOfInteriorLineBoxes) at Source/WebCore/rendering/RenderBlock.cpp:6651

(gdb) up
#1  primaryFont (this=<optimized out>) at Source/WebCore/platform/graphics/Font.h:326
326         return m_glyphs->primarySimpleFontData(m_fontDescription);

(gdb) list
323     inline const SimpleFontData* Font::primaryFont() const
324     {
325         ASSERT(m_glyphs);
326         return m_glyphs->primarySimpleFontData(m_fontDescription);
327     }

(gdb) up
#2  fontMetrics (this=<optimized out>) at Source/WebCore/platform/graphics/Font.h:143
143         const FontMetrics& fontMetrics() const { return primaryFont()->fontMetrics(); }

(gdb) list
138         FontWeight weight() const { return m_fontDescription.weight(); }
139         FontWidthVariant widthVariant() const { return m_fontDescription.widthVariant(); }
140
141         bool isPlatformFont() const { return m_glyphs->isForPlatformFont(); }
142
143         const FontMetrics& fontMetrics() const { return primaryFont()->fontMetrics(); }
144         float spaceWidth() const { return primaryFont()->spaceWidth() + m_letterSpacing; }
145         float tabWidth(const SimpleFontData&, unsigned tabSize, float position) const;
146         float tabWidth(unsigned tabSize, float position) const { return tabWidth(*primaryFont(), tabSize, position); }
147


install fonts -- first kde-workspace, then other fonts
--------------------------------------------------------

# rpm -q -a | grep font
fontpackages-filesystem-1.44-9.fc20.noarch
fontconfig-2.11.0-1.fc20.i686
fontconfig-debuginfo-2.11.0-1.fc20.i686


yum install kde-workspace


Program received signal SIGSEGV, Segmentation fault.
primarySimpleFontData (description=..., this=0x71101b60) at Source/WebCore/platform/graphics/FontGlyphs.h:123
123             m_cachedPrimarySimpleFontData = primaryFontData(description)->fontDataForCharacter(' ');
Missing separate debuginfos, use: debuginfo-install GConf2-3.2.6-7.fc20.i686


install all fonts packages found on another fedora desktop


  File "/home/pyjs/pyjstest/pyjsroot/pyjs/runners/giwebkit.py", line 704, in addEventListener
    element.add_event_listener(event_name, listener, False)
TypeError: add_event_listener() takes exactly 5 arguments (4 given)


add_event_listener()
-------------------------------

[lib]# grep -r add_event_listener *
Binary file debug/usr/lib/libwebkit2gtk-3.0.so.25.4.9.debug matches
Binary file debug/usr/lib/libwebkitgtk-3.0.so.0.19.15.debug matches
Binary file girepository-1.0/WebKit-3.0.typelib matches
Binary file libwebkitgtk-3.0.so.0 matches
Binary file libwebkitgtk-3.0.so.0.19.15 matches


  File "/home/pyjs/pyjstest/pyjsroot/pyjs/runners/giwebkit.py", line 704, in addEventListener
    element.add_event_listener(event_name, listener, False)
TypeError: add_event_listener() takes exactly 5 arguments (4 given)


modify pyjs/runners/giwebkit.py
add Nont to add_event_listener at 693, 704:
    691     def addWindowEventListener(self, event_name, cb):
    692         listener = Callback(self, cb, True)
    693         self._wnd.add_event_listener(event_name, listener, False, None)
    694         #TODO: this can probably just be removed now?
    695         # if not, MUST USE WEAKREFS OR IT WILL LEAK!
    696         self.listeners[listener] = self._wnd
    ...
    702     def addEventListener(self, element, event_name, cb):
    703         listener = Callback(element, cb, False)
    704         element.add_event_listener(event_name, listener, False, None)
    705         #TODO: this can probably just be removed now?
    706         # if not, MUST USE WEAKREFS OR IT WILL LEAK!
    707         self.listeners[listener] = element

$ cat ../../senv 
PYTHONPATH=/home/pyjs/pyjstest/pyjsroot:/lib/python2.7/site-packages
$ source ../../senv 
$ ../../mypy/bin/python Hello.py 

error when moving mouse into the window or to the button in the window:
TypeError: __call__() takes exactly 3 arguments (1 given)


modify: give Callback.__call__ default argument values of None:
    465 class Callback(object):
    ...
    472     ###def __call__(self, sender, event):
    473     def __call__(self, sender=None, event=None):
    474         try:
    475             return self.cb(self.sender, event, self.boolparam)
    476         except:
    477             print_exc()
    478             return None
error:
Traceback (most recent call last):
  File "/home/pyjs/pyjstest/pyjsroot/pyjs/runners/giwebkit.py", line 475, in __call__
    return self.cb(self.sender, event, self.boolparam)
  File "/home/pyjs/pyjstest/pyjsroot/pyjswidgets/pyjamas/DOM.py", line 184, in browser_event_cb
    event = wnd().event
  File "/home/pyjs/pyjstest/pyjsroot/pyjs/runners/giwebkit.py", line 411, in __call__
    return self.getattr(inst, key)
  File "/home/pyjs/pyjstest/pyjsroot/pyjs/runners/giwebkit.py", line 422, in getattr
    inst.__class__.__name__, key))
AttributeError: 'DOMDOMWindow' object has no attribute 'event'
Segmentation fault


modify: add "FakeEvent" return:
    414     def getattr(self, inst, key):
    415         for impl in (self.getattr_gi, self.getattr_w3):
    416             attr = impl(inst, key)
    417             if attr is not self.NONE:
    418                 logger.debug('%s:%s.%s', impl.__name__,
    419                     inst.__class__.__name__, key)
    420                 return attr
    421         return "FakeEvent"
    422         raise AttributeError('%r object has no attribute %r' % (
    423                                     inst.__class__.__name__, key))
error:
Traceback (most recent call last):
  File "/home/pyjs/pyjstest/pyjsroot/pyjs/runners/giwebkit.py", line 476, in __call__
    return self.cb(self.sender, event, self.boolparam)
  File "/home/pyjs/pyjstest/pyjsroot/pyjswidgets/pyjamas/DOM.py", line 192, in browser_event_cb
    et = eventGetType(event)
  File "/home/pyjs/pyjstest/pyjsroot/pyjswidgets/pyjamas/DOM.py", line 424, in eventGetType
    return event.type
AttributeError: 'str' object has no attribute 'type'
Segmentation fault


the crashing code: pyjswidgets/pyjamas/DOM.py

    179 def browser_event_cb(view, event, from_window):
    180 
    181     global sCaptureElem
    182     #print "sCaptureElem", sCaptureElem
    183     if event is None:
    184         event = wnd().event
    185     else:
    186         try:
    187             event = get_main_frame().gobject_wrap(event) # webkit HACK!
    188         except:
    189             pass
    190 
    191     #print "browser_event_cb", event
    192     et = eventGetType(event)
    193     #print "browser_event_cb", event, et
    194     if et == "resize":
    195         onResize()
    196         return
    197     if et == 'mouseout':
    198         #print "mouse out", event
    199         _dispatchCapturedMouseoutEvent(event)
    200     if (et == 'keyup' or et == 'keydown' or
    201           et == 'keypress' or et == 'change'):
    202         return _dispatchCapturedEvent(event)
    203     else:
    204         return _dispatchCapturedMouseEvent(event)
    ...
    423 def eventGetType(event):
    424     return event.type


summary
-----------

still crash a lot. either add_event_listener() not right (filled the 4th with False) or 
another api is not right.



reference about add_event_listener
====================================

pyjs.org user list

Sarvi Shanmugham 	
13/10/2013
In which case I don't have anyway to test how my restructuring has impacted pyjamas-desktop.

Could I trouble you to quickly see if pyjamas-Desktop works with my directory restructuring at https://github.com/sarvi/pyjs

Sarvi


Lex Berezhny 	
15/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
I had a lengthy conversation with Anthony today about the layout and we made a bunch of updates to the wiki doc.

Everyone should take a look and provide feedback:
https://github.com/pyjs/pyjs/wiki/The-Grand-Schism

I will try to explain some of the decisions:

1. In an effort to keep a flatter namespace for users we decided that all of the user modules should be at the root of pyjs. So that it is possible to do things like:

from pyjs.dom import Div,Table, Tr, Td
from pyjs.ajax import AjaxComms
from pyjs.storage import LocalStorage

The above is similar to how Django has flattened their namespace.

2. Initially we had the runtimes and translator at the root as well but we felt that since it's never meant to be imported by users it shouldn't pollute the namespace. We moved it into core and then to really make the point made it a private module with an underscore (this means that "from pyjs import *" will not import _core).

3. The names of the two modules in _core are named to match up with eventual pyjs sub commands.

pyjs run app.MyApp
pyjs translate app.MyApp


Finally, one thing that came up that I don't think has been discussed before is what version of Python is stdlib supposed to target?

Another thing I would like to discuss is using the built-in python ast library and eliminating the parsing code that's currently in pyjs. Less code == less bugs. This would also make the translator code much simpler to read and work on.

 - lex 


C Anthony Risinger 	
16/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
it's merged and works fine; ATM it's not the default and you have to manually enable it with ..pyjd/pyjdrc:

[gui]
engine=giwebkit

...it could pretty easily auto-detect, or just try to import all three...

it needs addEventListener to be impl'd in ctypes (or cffi, but ctypes is stdlib) to be useful -- i started this 2 nights ago and got about 1/2 thru.  i'll be at the in-laws all weekend tho and i usually get pretty good chunks of time there (since the kiddo spends time with Nana :) so my plan was to finish this weekend if possible.

the pythonwebkit stuff AFAIK is completely broken for about 2-3 years now... i thought i removed all refs to it, but maybe i only removed wiki stuff; will recheck.
^^^ this, and don't bother with pythonwebkit at all... it's massively out-of-date and won't build against current libs without at least 5 patches i know of, and probably several more i don't.

TBH, i've never tried the giwebkit stuff on Mac, as i don't have access to such machine; i'm not aware of any inherent reasons preventing it from working tho... it does require GTK[23] and GObject Introspection libraries, so long as those work on a Mac it would probably work.

i plan on testing your stuff tonight tho, i just didn't quite get to it last night (though i got most of the way there).

...
yes i agree -- this layout is just a super-high-level/coarse-grained overview of where it's heading -- my meta_path work will be merged before any of this, and that transparently handles aliasing old code.

IOW: it'll be fully back-compat and any existing code should continue to work (native or translated)

C Anthony 


Sarvi Shanmugham 	
16/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
Can you point me to some documentation on how to get this giwebkit compiling 
from scratch so that I can give it a go on the mac.

So far in looking for document I have been confused between
  pywebkitgtk, then pythonwebkit and no giwebkit

pywebkitgtk is a standard port I can find in my mac port repo
From what I read pythonwebkit is an old branch of webkit with luke's python changes/wrappers.

what is this giwebkit? Is it a standard part of webkit? or is it a branch of like pythonwebkit?

Sarvi


C Anthony Risinger 	
16/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
On Wed, Oct 16, 2013 at 1:00 PM, Sarvi Shanmugham <sarv...@gmail.com> wrote:

    Can you point me to some documentation on how to get this giwebkit compiling 
    from scratch so that I can give it a go on the mac.

    So far in looking for document I have been confused between
      pywebkitgtk, then pythonwebkit and no giwebkit

    pywebkitgtk is a standard port I can find in my mac port repo
    From what I read pythonwebkit is an old branch of webkit with luke's python changes/wrappers.

    what is this giwebkit? Is it a standard part of webkit? or is it a branch of like pythonwebkit?


 * pywebkitgtk is (was?) a python binding to webkitgtk that i think uses pygtk2
 * pythonwebkit is webkitgtk + luke's patches for direct python bindings
 * giwebkit is `pyjs/runners/giwebkit.py` (a dynamic binding to a GI-enabled webkitgtk build)

...`giwebkit` is just the name i gave it, but it should work out-of-the box with any recent (last 2 yrs or so) webkitgtk build so long as it was built with `--enable-introspection`

the missing piece (addEventListener) is used pretty early so it might fail to boot, but it should be pretty easy to temporarily fake it.

from python you must be able to do this:
    from gi.repository import WebKit

you need [upstream!] GTK3 and webkitgtk (libwebkitgtk-3.0.so.*) to make it work.


Sarvi Shanmugham 	
16/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
- show quoted text -
I see the following 2 choices in mac ports. From my read of pyjs/runners/giwebkit.py
I think I need the following
----------------
localhost:pyjs sarvi$ sudo port info webkit-gtk3
webkit-gtk3 @2.0.4_2 (www, gnome)
Variants:             quartz, universal, [+]video

Description:          Apple's WebKit HTML rendering library for GTK+
Homepage:             http://webkitgtk.org/

Extract Dependencies: xz
Build Dependencies:   gtk-doc, pkgconfig, autoconf, automake, libtool
Library Dependencies: glib2, bison, flex, enchant, geoclue, gobject-introspection, harfbuzz-icu, libxslt, libpng, libsecret, libsoup, mesa,
                      sqlite3, webp, xorg-libXt, gtk3, gstreamer1-gst-plugins-base
Platforms:            darwin, freebsd
License:              LGPL-2+ BSD
Maintainers:          jere...@macports.org, dev...@macports.org
------------

So It looks like I should be picking the later i.e "sudo port info webkit-gtk3"

So I can go ahead and install this and don't have to patch it before compiling right?

After I install webkit-gtk3, and lets say I have the latest pyjs sources from git.
What else do I need to do?

Sarvi
PS: If I get this to work, I promise I will do the documentation for pyjd on MacOS


Sarvi Shanmugham 	
17/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
Well I almost got it up. keyword being almost :-)

I got webkit-gtk3 +quartz installed
I am able to do 
import gi 
from python

Had a to a little tweek in pyjd/__init__.py to add the paths pyjswidgets and pyjsaddons into sys.path
...
DEBUG:pyjs.runners.giwebkit:sub-frame: <WebFrame object at 0x15108a1e0 (WebKitWebFrame at 0x7ff43a874e80)>
Traceback (most recent call last):
  File "/Users/sarvi/Workspace/pyjs/pyjs/runners/giwebkit.py", line 588, in _frame_loaded_cb
    self._doc.ctx = self
  File "/Users/sarvi/Workspace/pyjs/pyjs/runners/giwebkit.py", line 409, in __call__
    self.setattr(inst, key, attr)
  File "/Users/sarvi/Workspace/pyjs/pyjs/runners/giwebkit.py", line 456, in setattr
    inst.set_data(key, attr)
  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/gi/overrides/GObject.py", line 590, in _unsupported_data_method
    raise RuntimeError('Data access methods are unsupported. '
RuntimeError: Data access methods are unsupported. Use normal Python attributes instead


Sarvi Shanmugham 	
17/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
Found this
http://comments.gmane.org/gmane.linux.laptop.olpc.sugar/39321
https://bugzilla.gnome.org/show_bug.cgi?id=641944

Which talks about the issue and a change in the gobject API

Sarvi


C Anthony Risinger 	
17/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
On Thu, Oct 17, 2013 at 4:50 AM, Sarvi Shanmugham <sarv...@gmail.com> wrote:

    Found this
    http://comments.gmane.org/gmane.linux.laptop.olpc.sugar/39321
    https://bugzilla.gnome.org/show_bug.cgi?id=641944

    Which talks about the issue and a change in the gobject API

ah dang, thanks for the link.

i'll have to update the backend then... there wasn't a reason i used the set/get methods other than i thought they might be more stable...

if you change:

    def setattr(self, inst, key, attr):
        # hasattr() *specifically* chosen because it calls getattr()
        # internally, possibly setting a proxy object; if True, super()
        # will then properly setattr() against the proxy or instance.
        if hasattr(inst, key):
            super(self._type_gi, inst).__setattr__(key, attr)
        else:
            inst.set_data(key, attr)
            logger.debug('setattr(inst, %r, attr):\n%s', key,
                pformat([('inst', inst), ('attr', attr)]))
...to:
    def setattr(self, inst, key, attr):
        self.getattr(inst, key)
        super(self._type_gi, inst).__setattr__(key, attr)

...i think it will probably work.

the good news is you seem to be up and running! any issue from here is ours... i was a bit skeptical this would work at all, but you're way past that.

-- 

C Anthony

    def setattr(self, inst, key, attr):
        # hasattr() *specifically* chosen because it calls getattr()
        # internally, possibly setting a proxy object; if True, super()
        # will then properly setattr() against the proxy or instance.
        hasattr(inst, key)
        super(self._type_gi, inst).__setattr__(key, attr)

...the "empty" call to hasattr is purely to trigger the creation of a proxy object, if need be.

C Anthony


Sarvi Shanmugham 	
17/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
The second one got me pas that error and I hit the following which I suspect is related to the lack of EventListener support

DEBUG:pyjs.runners.giwebkit:sub-frame: <WebFrame object at 0x1510481e0 (WebKitWebFrame at 0x7fbae4009840)>
Traceback (most recent call last):
  File "/Users/sarvi/Workspace/pyjs/pyjs/runners/giwebkit.py", line 603, in _frame_loaded_cb
    __pyjamas__.set_main_frame(self)
  File "/Users/sarvi/Workspace/pyjs/pyjswidgets/__pyjamas__.py", line 38, in set_main_frame
    DOM.init()
  File "/Users/sarvi/Workspace/pyjs/pyjswidgets/pyjamas/DOM.py", line 83, in init
    mf._addWindowEventListener("click", browser_event_cb)
  File "/Users/sarvi/Workspace/pyjs/pyjs/runners/giwebkit.py", line 687, in addWindowEventListener
    listener = WebKit.dom_create_event_listener(cb._callback, None)
  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/gi/module.py", line 313, in __getattr__
    return getattr(self._introspection_module, name)
  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/gi/module.py", line 134, in __getattr__
    self.__name__, name))
AttributeError: 'gi.repository.WebKit' object has no attribute 'dom_create_event_listener'

I don't see a dom_create_event_listener in the webkit DOMWindow.idl below
https://github.com/WebKit/webkit/blob/master/Source/WebCore/page/DOMWindow.idl

But I see this below. am I way off? where did you find the dom_create_event_listener?

    // EventTarget interface
    [Custom] void addEventListener(DOMString type,
                                  EventListener listener,
                                  optional boolean useCapture);
    [Custom] void removeEventListener(DOMString type,
                                      EventListener listener,
                                      optional boolean useCapture);
    [RaisesException] boolean dispatchEvent(Event evt);

    void captureEvents(/*in long eventFlags*/);
    void releaseEvents(/*in long eventFlags*/);

I read through some of your threads/bug to WebKit/Gobject introspection about adding addEventListener below. 
Is the above what you were looking for?

https://bugs.webkit.org/show_bug.cgi?id=77835


C Anthony Risinger 	
17/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
- show quoted text -

Yep, this is the remaining thing that I have to implement via ctypes... the method is defined in the underlying gobject api, but since WebKitGTK authors did not add a GNotify callback to the signature, or use a GClosure, the introspection stuff is unable to automatically generate a non-leaky binding... therefore it gets skipped altogether.

If you just change the function to skip that stuff (possibly by just `pass`ing it entirely), you should be able to run most if not all examples... event handling won't work, but it should still construct the DOM.

I plan to wrap up the ctypes stuff over the weekend... I'll be at the in-laws house with my chromebook, but VPN+SSH usually let's me work all the same.

C Anthony [mobile]


C Anthony Risinger 	
17/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
the goog news is add_event_listener REALLY does work, the problem is the handler doesn't recieve any args.  i know what the problem is, and i'm pretty sure there is a solution using PyGI's overrides system, but i'll have to look at that later... FTW, i somewhat described the issue last year, here:

https://bugs.webkit.org/show_bug.cgi?id=77835#c16

...it relates to the fact that a GCallback (before casting) doesn't receive any args, therefore PyGI doesn't send any.

RE: the `app` issue, honestly i don't know how that worked before... more than likely i changed the global from app -> context at the last second and never tested it before committing, but i promise you, this thing worked at one point :)

so, even though event handling is busted, and will cause a segfault, you should be able to do this:

# cd examples/kitchensink/
# ../../bin/pyjd KitchenSink.py

...and see the example in all it's glory. you must be in the proper directory else it won't find the template HTML file. mousing over the window will lead to a segfault until i figure out how to tell PyGI which args to expect for a handler... i know it can be done by modifying the annotation in the source (as i demonstrated in the link above), but obviously we don't want to do that because then you have to recompile webkit for a very stupid reason.

i may have time tonight to look into this, otherwise i'l have to punt until the weekend, but feel free to explore until then! this is probably the final hurdle to a fully out-of-the-box solution for Linux (and apparently MacOS!)

C Anthony


Sarvi Shanmugham 	
26/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
Was the addlistener problem fixed for the pyjamas-desktop with your recent commits?
Are you able to run examples from pyajamas-desktop using giwebkit?

I was able to run examples/helloworld
sarvi-mac:helloworld sarvi$ ../../lpython/bin/python HelloWorld.py

But the KitchenSink still fails for the addlistener

sarvi-mac:kitchensink sarvi$ ../../lpython/bin/python KitchenSink.py 
...
DEBUG:pyjs.runners.giwebkit:sub-frame: <WebFrame object at 0x149894b40 (WebKitWebFrame at 0x7fcc2a023c40)>
Traceback (most recent call last):
  File "/Users/sarvi/Workspace/pyjs/pyjs/runners/giwebkit.py", line 608, in _frame_loaded_cb
    __pyjamas__.set_main_frame(self)
  File "/Users/sarvi/Workspace/pyjs/pyjswidgets/__pyjamas__.py", line 38, in set_main_frame
    DOM.init()
  File "/Users/sarvi/Workspace/pyjs/pyjswidgets/pyjamas/DOM.py", line 83, in init
    mf._addWindowEventListener("click", browser_event_cb)
  File "/Users/sarvi/Workspace/pyjs/pyjs/runners/giwebkit.py", line 692, in addWindowEventListener
    self._wnd.add_event_listener(event_name, listener, False, None)
  File "/Users/sarvi/Workspace/pyjs/pyjs/runners/giwebkit.py", line 410, in __call__
    return self.getattr(inst, key)
  File "/Users/sarvi/Workspace/pyjs/pyjs/runners/giwebkit.py", line 421, in getattr
    inst.__class__.__name__, key))
AttributeError: 'DOMDOMWindow' object has no attribute 'add_event_listener'


Sarvi Shanmugham 	
28/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
Hi Anthony,
     I've been reading up on how to fix this add_event_listener problem and I came across a thread from you on the topic
https://lists.webkit.org/pipermail/webkit-gtk/2012-February/000936.html
Yet I can't seem to find any documentation on this add_event_listener API

On the other hand I found this
http://python-gtk-3-tutorial.readthedocs.org/en/latest/introduction.html
which seems to be using connect() to add the listeners to both the GTK level window objects as well
Webkit objects link links, docs, etc. I also noticed while debugging the Window and Document objects in runners.giwebkit 
they have connect() API in them.

I am gonna look at fixing this later this evening. Was just hoping you could throw some context on why add_event_listener and why not connect() ?

Sarvi


C Anthony Risinger 	
28/10/2013
Re: [pyjs-users] Re: pyjamas-desktop on MacOS - Need help from the whoever got pythonwebkit running on Ubuntu
On Mon, Oct 28, 2013 at 1:55 PM, Sarvi Shanmugham <sarv...@gmail.com> wrote:

    Hi Anthony,
         I've been reading up on how to fix this add_event_listener problem and I came across a thread from you on the topic
    https://lists.webkit.org/pipermail/webkit-gtk/2012-February/000936.html
    Yet I can't seem to find any documentation on this add_event_listener API
 
yeah for the most part there isn't much info out there :( the GObject stuff is pretty much 1-to-1 with DOM spec though, except using GObject naming convention, ie. underscores vs. .

    On the other hand I found this
    http://python-gtk-3-tutorial.readthedocs.org/en/latest/introduction.html
    which seems to be using connect() to add the listeners to both the GTK level window objects as well
    Webkit objects link links, docs, etc. I also noticed while debugging the Window and Document objects in runners.giwebkit 
    they have connect() API in them.

those objects have a connect() method IIRC because they are high-level obects that interact with other GTK3 objects, but i don't think everything does.

    I am gonna look at fixing this later this evening. Was just hoping you could throw some context on why add_event_listener and why not connect() ?

there is some race problems due to events coming from GTK3 instead of WebKit, though to be honest, i can't expand much more than that.  additionally, i believe the GTK3 connect() stuff would require all objects to register for all events ahead of time(!)... IIRC this was a limitation of the GTK3 framework that "might be addressed" at some point.  if you search the pyjamas-dev archives you can probably dredge up at least 10-20 pages of Luke rampaging about it, among other related things ;)

i'm actually on my way out of the office so i hope this isn't too terse, i mainly wanted to catch you early so you don't waste any time on this... because as of:

http://trac.webkit.org/changeset/157918

...we no longer have a problem :) after i tried to get it working the other day, and discovered it was supposedly "fixed", i sort of raged on them myself:

https://bugs.webkit.org/show_bug.cgi?id=114980#c9
https://bugs.webkit.org/show_bug.cgi?id=77835#c52
 
...but lo and behold, the patch we need was merged 4 days later, so the next release should have everything we need to implement this runtime using vanilla upstream sources, and hence should soon work properly in all modern distros (and probably Mac too!).

-- 

C Anthony



