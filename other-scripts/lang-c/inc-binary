
http://stackoverflow.com/questions/4864866/c-c-with-gcc-statically-add-resource-files-to-executable-library

[1] With imagemagick: 
    convert file.png data.h

[2] With objcopy: 

    objcopy -B i386 -I binary -O elf32-i386 foo-data.bin foo-data.o
  This gives you a foo-data.o object file which you can link into your executable. The C interface looks something like

  /** created from binary via objcopy */
  extern uint8_t foo_data[]      asm("_binary_foo_data_bin_start");
  extern uint8_t foo_data_size[] asm("_binary_foo_data_bin_size");
  extern uint8_t foo_data_end[]  asm("_binary_foo_data_bin_end");

  so you can do stuff like

  for (uint8_t *byte=foo_data; byte<foo_data_end; ++byte) {
    transmit_single_byte(*byte);
  }

  or

  size_t foo_size = (size_t)((void *)foo_data_size);
  void *foo_copy = malloc(foo_size);
  memcpy(foo_copy, foo_data, foo_size);

[3] cat zip to end of program and open with libzip. 

[4] xxd -i infile.bin outfile.h



